import {van} from '/dps.js';
{let e,t,{fromEntries:r,entries:o,keys:l,getPrototypeOf:n}=Object,{get:f,set:i,deleteProperty:y,ownKeys:a}=Reflect,{state:s,derive:c,add:m,tags:d}=van,b=n(s()),u=1e3,w=Symbol(),g=Symbol(),S=Symbol(),P=Symbol(),p=Symbol(),v=Symbol(),A=e=>(e[S]=1,e),D=e=>e?.[S]?c(()=>O(e())):s(O(e)),O=e=>{if(!(e instanceof Object)||e[w])return e;let t=new Proxy((e[w]=r(o(e).map(([e,t])=>[e,D(t)])),e[g]=e,e[P]=[],e[p]=s(1),e),{get:(e,r)=>n(e[w][r]??0)===b?e[w][r].val:("length"===r&&e[p].val,f(e,r,t)),set(e,r,o){let l=e[w];if(r in l)return l[r].val=O(o),1;let n=r in e,f=n&&"length"===r&&o!==e.length;return i(e,r,o)?(n?f&&++e[p].val:i(l,r,D(o))&&(++e[p].val,k(t,r,l[r])),1):void 0},deleteProperty:(e,t)=>(y(e[w],t)&&E(e,t),y(e,t)&&++e[p].val),ownKeys:e=>(e[p].val,a(e))});return t},_=e=>e[w],h=e=>new Proxy(e[w],{get:(e,t)=>e[t].rawVal}),j=e=>e[P]=e[P].filter(e=>e.t.isConnected),x=(e,t,r,o)=>()=>{let l=o(r,()=>delete e[t],t);return l[v]=t,l},K=(e,t,r,{t:o,f:n},f)=>{if(m(o,x(e,t,r,n)),!f&&Array.isArray(e)&&t!=e.length-1){let t={};for(let e of o.childNodes)t[e[v]]=e;let r=o.firstChild;for(let n of l(e))r===t[n]?r=r.nextSibling:o.insertBefore(t[n],r)}},k=(e,r,o)=>j(e).forEach(K.bind(t,e,r,o)),E=(e,t)=>{for(let r of j(e))[...r.t.childNodes].find(e=>e[v]===t)?.remove()},F=r=>(e??(setTimeout(()=>(e.forEach(j),e=t),u),e=new Set)).add(r),R=(e,t,r)=>{let l={t:e(),f:r};t[P].push(l),F(t);for(let[e,r]of o(t[w]))K(t,e,r,l,1);return l.t},T=(e,t)=>{let l=Array.isArray(e)?o(t(e.filter(e=>1))):t(o(e)),n=e[g],f=r(l),i=e[w],y=r(l.map(([e,t])=>{let r=i[e];return r?r.val=O(t):r=D(t),[e,r]}));for(let{t:t,f:r}of j(e)){let l={};for(let e of[...t.childNodes])e[v]in y?l[e[v]]=e:e.remove();let n=t.firstChild;for(let[f,i]of o(y))n===l[f]?n=n.nextSibling:t.insertBefore(l[f]??d.p(x(e,f,i,r)).firstChild,n)}for(let e in n)delete n[e];Array.isArray(n)&&(n.length=0);for(let e in f)n[e]=f[e];e[w]=y,++e[p].val};window.vanX={calc:A,reactive:O,stateFields:_,raw:h,list:R,replace:T}};